{
	"name": "PowerBIGateway",
	"dockerFile": "Dockerfile",
	"context": ".",
	"mounts": [
		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
		// Mount .azure folder for seamless az cli auth
		"source=${env:HOME}${env:USERPROFILE}/.azure,target=/home/vscode/.azure,type=bind"
	],
	// We need to be able to use the network and instead of making the container
	// privileged we grant the network capability. We also can't setup devices in
	// docker build stage so we need a create script
	"runArgs": [ "--cap-add=NET_ADMIN" ],
	"postCreateCommand": "",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terraform.indexing": {
			"enabled": false,
			"liveIndexing": false,
			"delay": 500,
			"exclude": [
				".terraform/**/*",
				"**/.terraform/**/*"
			]
		}
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"hashicorp.terraform",
		"ms-azuretools.vscode-azureterraform",
		"ms-vscode.azurecli",
		"ms-azuretools.vscode-docker",
		"ms-vsliveshare.vsliveshare-pack",
		"streetsidesoftware.code-spell-checker",
		"yzhang.markdown-all-in-one",
		"DavidAnson.vscode-markdownlint",
		"streetsidesoftware.code-spell-checker",
		"redhat.vscode-yaml"
	]
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "terraform --version",
	// Uncomment to connect as a non-root user. See https: //aka.ms/vscode-remote/containers/non-root.
	,"remoteUser": "vscode"
}